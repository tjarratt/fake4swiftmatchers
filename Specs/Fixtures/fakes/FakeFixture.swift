import Foundation
import Fake4SwiftMatchers

// this file was generated by Xcode-Better-Refactor-Tools
// https://github.com/tjarratt/xcode-better-refactor-tools

class FakeFixture : Fixture, InvocationRecording, Equatable {
    init() {
    }

    private(set) var doStuffCallCount : Int = 0
    func doStuff() {
        self.doStuffCallCount += 1
        self.invocations["doStuff"]?.append([])
    }

    private(set) var doCoolStuffCallCount : Int = 0
    private var doCoolStuffArgs : Array<(String, String)> = []
    func doCoolStuffArgsForCall(callIndex: Int) -> (String, String) {
        return self.doCoolStuffArgs[callIndex]
    }
    func doCoolStuff(withThings: String, andThangs: String) {
        self.doCoolStuffCallCount += 1
        self.invocations["doCoolStuff"]?.append([withThings, andThangs])
        self.doCoolStuffArgs.append((withThings, andThangs))
    }

    static func reset() {
    }

    private var invocations: [String: [[Any]]] = [
        "doStuff": [],
        "doCoolStuff": [],
        ]
    public func invocations(for methodName: String) -> [[Any]] {
        return invocations[methodName]!
    }
}

func == (a: FakeFixture, b: FakeFixture) -> Bool {
    return a === b
}
